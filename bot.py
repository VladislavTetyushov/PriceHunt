import time
import telebot
from telebot import types
import scraper
from dotenv import load_dotenv
import os
from urllib.parse import urlparse
import SQLdata

load_dotenv()
bot = telebot.TeleBot(os.getenv('TOKEN'));

need_check = True
price_from_pult = 0
price_from_citilink = 0
price_from_doctorhead = 0
url_dict = {}
active_thread = []
interval = 600

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
btn1 = types.KeyboardButton("–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏")
btn2 = types.KeyboardButton("–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
markup.add(btn1, btn2)


def get_company_name(url):
    parsed_url = urlparse(url)
    website_name = parsed_url.netloc.split('.')
    if len(website_name) == 3:
        return website_name[1]
    return website_name[0]


def check_price(user_id, urls):
    global need_check
    global price_from_pult
    while need_check:
        bot.send_message(user_id, "–Ø –≤–µ—Å—å –≤ —Ä–∞–±–æ—Ç–µ")
        for url in urls.items():
            new_price = scraper.get_price(url[1])
            if price_from_pult != new_price:
                price_from_pult = new_price
                bot.send_message(user_id, url[0] + ": " + new_price + "—Ä")
        time.sleep(600)


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}!".format(
                         message.from_user), reply_markup=markup)
    SQLdata.execute_query(f"INSERT INTO users (user_id, message) VALUES ({message.chat.id}, \"lolol\")")


@bot.message_handler(commands=['stop'])
def stop(message):
    bot.send_message(message.chat.id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global need_check
    global url_dict
    if message.text == "–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏":
        bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω—ã")

    elif message.text[:len(scraper.pult_url)] == scraper.pult_url or \
            message.text[:len(scraper.citilink_url)] == scraper.citilink_url or \
            message.text[:len(scraper.doctorhead_url)] == scraper.doctorhead_url:
        url_dict[get_company_name(message.text)] = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ù–µ—Ç")
        btn2 = types.KeyboardButton("–î–∞")
        markup.add(btn1, btn2)

        bot.send_message(message.from_user.id, "–°—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ? üëÄ", reply_markup=markup)

    elif message.text == "–î–∞":
        bot.send_message(message.from_user.id, "–ñ–¥—É —Å—Å—ã–ª–∫—É :)")

    elif message.text == "–ù–µ—Ç":
        need_check = True
        bot.send_message(message.from_user.id, "–ù–∞—á–∏–Ω–∞—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ üëÄ")
        print(url_dict)
        check_price(message.from_user.id, url_dict)

    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å —Å–∞–π—Ç–∞ pult")

    elif message.text == "–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ":
        bot.send_message(message.from_user.id, "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ")
        need_check = False

    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


bot.polling(none_stop=True, interval=0)
